<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiufeng.mapper.user.SysRoleMapper">

    <resultMap id="BaseResult" type="com.qiufeng.domain.SysRole">
        <id     column="role_id"             property="roleId"       />
        <result column="role_name"           property="roleName"     />
        <result column="role_key"            property="roleKey"      />
        <result column="data_scope"          property="dataScope"    />
        <result column="status"              property="status"       />
        <result column="del_flag"            property="delFlag"      />
        <result column="create_by"           property="createBy"    />
        <result column="create_time"         property="createTime"  />
        <result column="update_by"           property="updateBy"    />
        <result column="update_time"         property="updateTime"  />
        <result column="remark"              property="remark"      />
    </resultMap>

    <sql id="SysRoleSql">
        `role_id`,
        `role_name`,
        `role_key`,
        `data_scope`,
        `status`,
        `del_flag`,
        `create_by`,
        `create_time`,
        `update_by`,
        `update_time`,
        `remark`
    </sql>
    
    <insert id="saveSysRole" parameterType="SysRole">
        INSERT INTO `sys_role`(
            `role_name`,
            `role_key`,
            `create_by`,
            `create_time`,
            `update_by`,
            `update_time`,
            `remark`
        )
        VALUES(
            #{roleName},
            #{roleKey},
            #{createBy},
            #{createTime},
            #{updateBy},
            #{updateTime},
            #{remark}
        )
    </insert>

    <update id="updateSysRole" parameterType="SysRole">
        UPDATE SET
            `role_name`     = #{roleName},
            `role_key`      = #{roleKey},
            `create_by`     = #{createBy},
            `create_time`   = #{createTime},
            `update_by`     = #{updateBy},
            `update_time`   = #{updateTime},
            `remark`        = #{remark}
        WHERE `role_id` = #{roleId}
    </update>

    <delete id="deleteSysRole" parameterType="LONG">
        DELETE FROM `sys_role`
        WHERE `role_id` = #{roleId}
    </delete>

    <select id="selectSysRoleByRoleName" resultMap="BaseResult">
        SELECT <include refid="SysRoleSql"/>
        FROM `sys_role`
        WHERE `role_name` = #{roleName}
    </select>

    <select id="selectSysRoleByRoleId" resultMap="BaseResult">
        SELECT <include refid="SysRoleSql"/>
        FROM `sys_role`
        WHERE `role_id` = #{roleId}
    </select>

    <select id="selectSysRoleByRoleKey" resultMap="BaseResult">
        SELECT <include refid="SysRoleSql"/>
        FROM `sys_role`
        WHERE `role_key` = #{roleKey}
    </select>

    <select id="selectSysRoleList" resultMap="BaseResult">
        SELECT <include refid="SysRoleSql"/>
        FROM `sys_role`
    </select>

</mapper>