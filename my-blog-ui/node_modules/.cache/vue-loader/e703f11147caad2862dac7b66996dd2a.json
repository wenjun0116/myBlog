{"remainingRequest":"E:\\code\\java\\idea\\myblog\\my-blog-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\java\\idea\\myblog\\my-blog-ui\\src\\views\\system\\dict\\data.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\java\\idea\\myblog\\my-blog-ui\\src\\views\\system\\dict\\data.vue","mtime":1608965686031},{"path":"E:\\code\\java\\idea\\myblog\\my-blog-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\java\\idea\\myblog\\my-blog-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\code\\java\\idea\\myblog\\my-blog-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\java\\idea\\myblog\\my-blog-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["data.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"data.vue","sourceRoot":"src/views/system/dict","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\r\n      <el-form-item label=\"字典名称\" prop=\"dictType\">\r\n        <el-select v-model=\"queryParams.dictType\" size=\"small\">\r\n          <el-option\r\n            v-for=\"item in typeOptions\"\r\n            :key=\"item.dictId\"\r\n            :label=\"item.dictName\"\r\n            :value=\"item.dictType\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"字典标签\" prop=\"dictLabel\">\r\n        <el-input\r\n          v-model=\"queryParams.dictLabel\"\r\n          placeholder=\"请输入字典标签\"\r\n          clearable\r\n          size=\"small\"\r\n          @keyup.enter.native=\"handleQuery\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"状态\" prop=\"status\">\r\n        <el-select v-model=\"queryParams.status\" placeholder=\"数据状态\" clearable size=\"small\">\r\n          <el-option\r\n            v-for=\"dict in statusOptions\"\r\n            :key=\"dict.dictValue\"\r\n            :label=\"dict.dictLabel\"\r\n            :value=\"dict.dictValue\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"cyan\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"primary\"\r\n          icon=\"el-icon-plus\"\r\n          size=\"mini\"\r\n          @click=\"handleAdd\"\r\n          v-hasPermi=\"['system:dict:add']\"\r\n        >新增</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"success\"\r\n          icon=\"el-icon-edit\"\r\n          size=\"mini\"\r\n          :disabled=\"single\"\r\n          @click=\"handleUpdate\"\r\n          v-hasPermi=\"['system:dict:edit']\"\r\n        >修改</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"danger\"\r\n          icon=\"el-icon-delete\"\r\n          size=\"mini\"\r\n          :disabled=\"multiple\"\r\n          @click=\"handleDelete\"\r\n          v-hasPermi=\"['system:dict:remove']\"\r\n        >删除</el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button\r\n          type=\"warning\"\r\n          icon=\"el-icon-download\"\r\n          size=\"mini\"\r\n          @click=\"handleExport\"\r\n          v-hasPermi=\"['system:dict:export']\"\r\n        >导出</el-button>\r\n      </el-col>\r\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\r\n    </el-row>\r\n\r\n    <el-table v-loading=\"loading\" :data=\"dataList\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n      <el-table-column label=\"字典编码\" align=\"center\" prop=\"dictCode\" />\r\n      <el-table-column label=\"字典标签\" align=\"center\" prop=\"dictLabel\" />\r\n      <el-table-column label=\"字典键值\" align=\"center\" prop=\"dictValue\" />\r\n      <el-table-column label=\"字典排序\" align=\"center\" prop=\"dictSort\" />\r\n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\" :formatter=\"statusFormat\" />\r\n      <el-table-column label=\"备注\" align=\"center\" prop=\"remark\" :show-overflow-tooltip=\"true\" />\r\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ parseTime(scope.row.createTime) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"handleUpdate(scope.row)\"\r\n            v-hasPermi=\"['system:dict:edit']\"\r\n          >修改</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"text\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"handleDelete(scope.row)\"\r\n            v-hasPermi=\"['system:dict:remove']\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <pagination\r\n      v-show=\"total>0\"\r\n      :total=\"total\"\r\n      :page.sync=\"queryParams.pageNum\"\r\n      :limit.sync=\"queryParams.pageSize\"\r\n      @pagination=\"getList\"\r\n    />\r\n\r\n    <!-- 添加或修改参数配置对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n        <el-form-item label=\"字典类型\">\r\n          <el-input v-model=\"form.dictType\" :disabled=\"true\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"数据标签\" prop=\"dictLabel\">\r\n          <el-input v-model=\"form.dictLabel\" placeholder=\"请输入数据标签\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"数据键值\" prop=\"dictValue\">\r\n          <el-input v-model=\"form.dictValue\" placeholder=\"请输入数据键值\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"显示排序\" prop=\"dictSort\">\r\n          <el-input-number v-model=\"form.dictSort\" controls-position=\"right\" :min=\"0\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"form.status\">\r\n            <el-radio\r\n              v-for=\"dict in statusOptions\"\r\n              :key=\"dict.dictValue\"\r\n              :label=\"dict.dictValue\"\r\n            >{{dict.dictLabel}}</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { listData, getData, delData, addData, updateData, exportData } from '@/api/system/dict/data'\r\nimport { listType, getType } from '@/api/system/dict/type'\r\n\r\nexport default {\r\n  name: \"Data\",\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 选中数组\r\n      ids: [],\r\n      // 非单个禁用\r\n      single: true,\r\n      // 非多个禁用\r\n      multiple: true,\r\n      // 显示搜索条件\r\n      showSearch: true,\r\n      // 总条数\r\n      total: 0,\r\n      // 字典表格数据\r\n      dataList: [],\r\n      // 默认字典类型\r\n      defaultDictType: '',\r\n      // 弹出层标题\r\n      title: \"\",\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 状态数据字典\r\n      statusOptions: [],\r\n      // 类型数据字典\r\n      typeOptions: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        dictName: undefined,\r\n        dictType: undefined,\r\n        status: undefined\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        dictLabel: [\r\n          { required: true, message: '数据标签不能为空', trigger: 'blur' }\r\n        ],\r\n        dictValue: [\r\n          { required: true, message: '数据键值不能为空', trigger: 'blur' }\r\n        ],\r\n        dictSort: [\r\n          { required: true, message: '数据顺序不能为空', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const dictId = this.$route.params && this.$route.params.dictId;\r\n    this.getType(dictId)\r\n    this.getTypeList()\r\n    this.getDicts('sys_normal_disable').then(response => {\r\n      this.statusOptions = response.data\r\n    })\r\n  },\r\n  methods: {\r\n    /** 查询字典类型详细 */\r\n    getType(dictId) {\r\n      getType(dictId).then(response => {\r\n        this.queryParams.dictType = response.data.dictType\r\n        this.defaultDictType = response.data.dictType\r\n        this.getList();\r\n      })\r\n    },\r\n    /** 查询字典类型列表 */\r\n    getTypeList() {\r\n      listType().then(response => {\r\n        this.typeOptions = response.rows\r\n      })\r\n    },\r\n    /** 查询字典数据列表 */\r\n    getList() {\r\n      this.loading = true;\r\n      listData(this.queryParams).then(response => {\r\n        this.dataList = response.rows\r\n        this.total = response.total\r\n        this.loading = false\r\n      })\r\n    },\r\n    // 数据状态字典翻译\r\n    statusFormat(row, column) {\r\n      return this.selectDictLabel(this.statusOptions, row.status)\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false\r\n      this.reset()\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n        dictCode: undefined,\r\n        dictLabel: undefined,\r\n        dictValue: undefined,\r\n        dictSort: 0,\r\n        status: '0',\r\n        remark: undefined\r\n      };\r\n      this.resetForm('form')\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1;\r\n      this.getList()\r\n    },\r\n    /** 重置按钮操作 */\r\n    resetQuery() {\r\n      this.resetForm('queryForm')\r\n      this.queryParams.dictType = this.defaultDictType;\r\n      this.handleQuery()\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleAdd() {\r\n      this.reset()\r\n      this.open = true\r\n      this.title = '添加字典数据'\r\n      this.form.dictType = this.queryParams.dictType\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.dictCode)\r\n      this.single = selection.length!=1\r\n      this.multiple = !selection.length\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset();\r\n      const dictCode = row.dictCode || this.ids\r\n      getData(dictCode).then(response => {\r\n        this.form = response.data\r\n        this.open = true\r\n        this.title = '修改字典数据'\r\n      });\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm: function() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.dictCode != undefined) {\r\n            updateData(this.form).then(response => {\r\n              if (response.code === 200) {\r\n                this.msgSuccess('修改成功')\r\n                this.open = false\r\n                this.getList()\r\n              }\r\n            });\r\n          } else {\r\n            addData(this.form).then(response => {\r\n              if (response.code === 200) {\r\n                this.msgSuccess('新增成功')\r\n                this.open = false\r\n                this.getList()\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      const dictCodes = row.dictCode || this.ids\r\n      this.$confirm('是否确认删除字典编码为\"' + dictCodes + '\"的数据项?', '警告', {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: 'warning'\r\n      }).then(function() {\r\n        return delData(dictCodes)\r\n      }).then(() => {\r\n        this.getList();\r\n        this.msgSuccess(\"删除成功\")\r\n      }).catch(function() {})\r\n    },\r\n    /** 导出按钮操作 */\r\n    handleExport() {\r\n      const queryParams = this.queryParams;\r\n      this.$confirm('是否确认导出所有数据项?', '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(function() {\r\n        return exportData(queryParams)\r\n      }).then(response => {\r\n        this.download(response.msg)\r\n      }).catch(function() {})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}